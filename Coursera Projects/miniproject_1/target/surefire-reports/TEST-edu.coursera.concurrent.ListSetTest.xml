<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="edu.coursera.concurrent.ListSetTest" time="942.279" tests="6" errors="0" skipped="0" failures="4">
  <properties>
    <property name="idea.version" value="2023.1.3"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="19.0.1+10"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-19-openjdk-19.0.1.0.10-2.rolling.fc35.x86_64/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/psi/Documents/Java Project/Java-Concurrency/miniproject_1"/>
    <property name="java.vm.vendor" value="Red Hat, Inc."/>
    <property name="java.vendor.url" value="https://www.redhat.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/psi/Documents/Java Project/Java-Concurrency/miniproject_1"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="19.0.1+10"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="os.name" value="Linux"/>
    <property name="maven.ext.class.path" value="/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven-event-listener.jar"/>
    <property name="classworlds.conf" value="/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven3/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="jansi.passthrough" value="true"/>
    <property name="maven.conf" value="/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven3/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="63.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="6.0.12-100.fc35.x86_64"/>
    <property name="user.home" value="/home/psi"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="19"/>
    <property name="user.name" value="psi"/>
    <property name="java.class.path" value="/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven3/boot/plexus-classworlds-2.6.0.jar:/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven3/boot/plexus-classworlds.license"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2023.1.3 test"/>
    <property name="java.home" value="/usr/lib/jvm/java-19-openjdk-19.0.1.0.10-2.rolling.fc35.x86_64"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="19.0.1"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Red Hat, Inc."/>
    <property name="sun.stderr.encoding" value="UTF-8"/>
    <property name="maven.home" value="/home/psi/idea-IC-231.9161.38/plugins/maven/lib/maven3"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2022-10-18"/>
    <property name="java.vendor.url.bug" value="https://bugzilla.redhat.com/enter_bug.cgi?product=Fedora&amp;component=java-latest-openjdk&amp;version=35"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="(Red_Hat-19.0.1.0.10-2.rolling.fc35)"/>
    <property name="sun.stdout.encoding" value="UTF-8"/>
  </properties>
  <testcase name="testCoarseGrainedLockingRandomLarge" classname="edu.coursera.concurrent.ListSetTest" time="377.937">
    <failure message="Expected contains throughput to remain similar (at least 0.700000x) with locks, but found 0.682251x" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected contains throughput to remain similar (at least 0.700000x) with locks, but found 0.682251x
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at edu.coursera.concurrent.ListSetTest.testCoarseGrainedLockingHelper(ListSetTest.java:177)
	at edu.coursera.concurrent.ListSetTest.testCoarseGrainedLockingRandomLarge(ListSetTest.java:52)
</failure>
    <system-out><![CDATA[=========================================================
CoarseList vs. SyncList (Large Random)
=========================================================
# threads = 8
0.6479556231546927x improvement in add throughput (17.674187401618294 -> 11.4520891115684)
0.6822509062574109x improvement in contains throughput (7.945178269937432 -> 5.420605075041501)
0.766526776007388x improvement in remove throughput (9.760412377422947 -> 7.481617432168617)
=========================================================
]]></system-out>
  </testcase>
  <testcase name="testCoarseGrainedLockingRepeatingLarge" classname="edu.coursera.concurrent.ListSetTest" time="84.327">
    <failure message="Expected remove throughput to remain similar (at least 0.600000x) with locks, but found 0.425216x" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected remove throughput to remain similar (at least 0.600000x) with locks, but found 0.425216x
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at edu.coursera.concurrent.ListSetTest.testCoarseGrainedLockingHelper(ListSetTest.java:182)
	at edu.coursera.concurrent.ListSetTest.testCoarseGrainedLockingRepeatingLarge(ListSetTest.java:69)
</failure>
    <system-out><![CDATA[=========================================================
CoarseList vs. SyncList (Large Repeating)
=========================================================
# threads = 8
0.7894634462635759x improvement in add throughput (157.69372921029938 -> 124.49343491651807)
0.9248566189380047x improvement in contains throughput (161.9911411094706 -> 149.8185790644142)
0.425215723873442x improvement in remove throughput (2164.599774520857 -> 920.4218600191755)
=========================================================
]]></system-out>
  </testcase>
  <testcase name="testReadWriteLocksRandomLarge" classname="edu.coursera.concurrent.ListSetTest" time="301.979"/>
  <testcase name="testReadWriteLocksRandomSmall" classname="edu.coursera.concurrent.ListSetTest" time="69.688"/>
  <testcase name="testReadWriteLocksRepeatingLarge" classname="edu.coursera.concurrent.ListSetTest" time="71.006">
    <failure message="Expected remove throughput improvement to be at least 0.500000x with read-write locks, but found 0.186800x" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected remove throughput improvement to be at least 0.500000x with read-write locks, but found 0.186800x
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at edu.coursera.concurrent.ListSetTest.testReadWriteLocksHelper(ListSetTest.java:229)
	at edu.coursera.concurrent.ListSetTest.testReadWriteLocksRepeatingLarge(ListSetTest.java:117)
</failure>
    <system-out><![CDATA[=========================================================
RWCoarseList vs. SyncList (Large Repeating)
=========================================================
# threads = 8
0.8384132288545749x improvement in add throughput (131.94516029275331 -> 110.62456787278175)
5.954288522978619x improvement in contains throughput (158.49430411094602 -> 943.7208159252888)
0.18680046314164417x improvement in remove throughput (3966.9421487603304 -> 741.0266306445388)
=========================================================
]]></system-out>
  </testcase>
  <testcase name="testReadWriteLocksRepeatingSmall" classname="edu.coursera.concurrent.ListSetTest" time="37.342">
    <failure message="Expected remove throughput improvement to be at least 0.400000x with read-write locks, but found 0.251959x" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected remove throughput improvement to be at least 0.400000x with read-write locks, but found 0.251959x
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at edu.coursera.concurrent.ListSetTest.testReadWriteLocksHelper(ListSetTest.java:229)
	at edu.coursera.concurrent.ListSetTest.testReadWriteLocksRepeatingSmall(ListSetTest.java:133)
</failure>
    <system-out><![CDATA[=========================================================
RWCoarseList vs. SyncList (Small Repeating)
=========================================================
# threads = 8
0.789272030651341x improvement in add throughput (143.39058999253174 -> 113.17418213969938)
5.386843397152675x improvement in contains throughput (174.9749384853732 -> 942.5625920471281)
0.25195868945868943x improvement in remove throughput (1356.8904593639577 -> 341.88034188034186)
=========================================================
]]></system-out>
  </testcase>
</testsuite>